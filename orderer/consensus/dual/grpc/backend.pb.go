// Code generated by protoc-gen-go. DO NOT EDIT.
// source: backend.proto

package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// message HelloRequest {
// string greeting = 1;
// }
//
// message HelloResponse {
// string reply = 1;
// repeated int32 number=4;
// }
//
// service HelloService {
// rpc SayHello(HelloRequest) returns (HelloResponse){}
// }
type PeerRequest struct {
	Greeting             string   `protobuf:"bytes,1,opt,name=greeting,proto3" json:"greeting,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerRequest) Reset()         { *m = PeerRequest{} }
func (m *PeerRequest) String() string { return proto.CompactTextString(m) }
func (*PeerRequest) ProtoMessage()    {}
func (*PeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_backend_d3c311b66966ebc3, []int{0}
}
func (m *PeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerRequest.Unmarshal(m, b)
}
func (m *PeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerRequest.Marshal(b, m, deterministic)
}
func (dst *PeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerRequest.Merge(dst, src)
}
func (m *PeerRequest) XXX_Size() int {
	return xxx_messageInfo_PeerRequest.Size(m)
}
func (m *PeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PeerRequest proto.InternalMessageInfo

func (m *PeerRequest) GetGreeting() string {
	if m != nil {
		return m.Greeting
	}
	return ""
}

type PeerInfoResponse struct {
	SeralizedId          int32    `protobuf:"varint,1,opt,name=seralizedId,proto3" json:"seralizedId,omitempty"`
	Credit               float32  `protobuf:"fixed32,2,opt,name=credit,proto3" json:"credit,omitempty"`
	AmIprimary           bool     `protobuf:"varint,3,opt,name=amIprimary,proto3" json:"amIprimary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerInfoResponse) Reset()         { *m = PeerInfoResponse{} }
func (m *PeerInfoResponse) String() string { return proto.CompactTextString(m) }
func (*PeerInfoResponse) ProtoMessage()    {}
func (*PeerInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_backend_d3c311b66966ebc3, []int{1}
}
func (m *PeerInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerInfoResponse.Unmarshal(m, b)
}
func (m *PeerInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerInfoResponse.Marshal(b, m, deterministic)
}
func (dst *PeerInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerInfoResponse.Merge(dst, src)
}
func (m *PeerInfoResponse) XXX_Size() int {
	return xxx_messageInfo_PeerInfoResponse.Size(m)
}
func (m *PeerInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PeerInfoResponse proto.InternalMessageInfo

func (m *PeerInfoResponse) GetSeralizedId() int32 {
	if m != nil {
		return m.SeralizedId
	}
	return 0
}

func (m *PeerInfoResponse) GetCredit() float32 {
	if m != nil {
		return m.Credit
	}
	return 0
}

func (m *PeerInfoResponse) GetAmIprimary() bool {
	if m != nil {
		return m.AmIprimary
	}
	return false
}

type IwantToBePrimaryRequest struct {
	SeralizedId          int32    `protobuf:"varint,1,opt,name=seralizedId,proto3" json:"seralizedId,omitempty"`
	Credit               float32  `protobuf:"fixed32,2,opt,name=credit,proto3" json:"credit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IwantToBePrimaryRequest) Reset()         { *m = IwantToBePrimaryRequest{} }
func (m *IwantToBePrimaryRequest) String() string { return proto.CompactTextString(m) }
func (*IwantToBePrimaryRequest) ProtoMessage()    {}
func (*IwantToBePrimaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_backend_d3c311b66966ebc3, []int{2}
}
func (m *IwantToBePrimaryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IwantToBePrimaryRequest.Unmarshal(m, b)
}
func (m *IwantToBePrimaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IwantToBePrimaryRequest.Marshal(b, m, deterministic)
}
func (dst *IwantToBePrimaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IwantToBePrimaryRequest.Merge(dst, src)
}
func (m *IwantToBePrimaryRequest) XXX_Size() int {
	return xxx_messageInfo_IwantToBePrimaryRequest.Size(m)
}
func (m *IwantToBePrimaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IwantToBePrimaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IwantToBePrimaryRequest proto.InternalMessageInfo

func (m *IwantToBePrimaryRequest) GetSeralizedId() int32 {
	if m != nil {
		return m.SeralizedId
	}
	return 0
}

func (m *IwantToBePrimaryRequest) GetCredit() float32 {
	if m != nil {
		return m.Credit
	}
	return 0
}

type IwantToBePrimaryResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IwantToBePrimaryResponse) Reset()         { *m = IwantToBePrimaryResponse{} }
func (m *IwantToBePrimaryResponse) String() string { return proto.CompactTextString(m) }
func (*IwantToBePrimaryResponse) ProtoMessage()    {}
func (*IwantToBePrimaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_backend_d3c311b66966ebc3, []int{3}
}
func (m *IwantToBePrimaryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IwantToBePrimaryResponse.Unmarshal(m, b)
}
func (m *IwantToBePrimaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IwantToBePrimaryResponse.Marshal(b, m, deterministic)
}
func (dst *IwantToBePrimaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IwantToBePrimaryResponse.Merge(dst, src)
}
func (m *IwantToBePrimaryResponse) XXX_Size() int {
	return xxx_messageInfo_IwantToBePrimaryResponse.Size(m)
}
func (m *IwantToBePrimaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IwantToBePrimaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IwantToBePrimaryResponse proto.InternalMessageInfo

func (m *IwantToBePrimaryResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*PeerRequest)(nil), "grpc.PeerRequest")
	proto.RegisterType((*PeerInfoResponse)(nil), "grpc.PeerInfoResponse")
	proto.RegisterType((*IwantToBePrimaryRequest)(nil), "grpc.IwantToBePrimaryRequest")
	proto.RegisterType((*IwantToBePrimaryResponse)(nil), "grpc.IwantToBePrimaryResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BackendServiceClient is the client API for BackendService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BackendServiceClient interface {
	GetPeerInfo(ctx context.Context, in *PeerRequest, opts ...grpc.CallOption) (*PeerInfoResponse, error)
	IwantoBePrimary(ctx context.Context, in *IwantToBePrimaryRequest, opts ...grpc.CallOption) (*IwantToBePrimaryResponse, error)
}

type backendServiceClient struct {
	cc *grpc.ClientConn
}

func NewBackendServiceClient(cc *grpc.ClientConn) BackendServiceClient {
	return &backendServiceClient{cc}
}

func (c *backendServiceClient) GetPeerInfo(ctx context.Context, in *PeerRequest, opts ...grpc.CallOption) (*PeerInfoResponse, error) {
	out := new(PeerInfoResponse)
	err := c.cc.Invoke(ctx, "/grpc.BackendService/getPeerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendServiceClient) IwantoBePrimary(ctx context.Context, in *IwantToBePrimaryRequest, opts ...grpc.CallOption) (*IwantToBePrimaryResponse, error) {
	out := new(IwantToBePrimaryResponse)
	err := c.cc.Invoke(ctx, "/grpc.BackendService/IwantoBePrimary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BackendServiceServer is the server API for BackendService service.
type BackendServiceServer interface {
	GetPeerInfo(context.Context, *PeerRequest) (*PeerInfoResponse, error)
	IwantoBePrimary(context.Context, *IwantToBePrimaryRequest) (*IwantToBePrimaryResponse, error)
}

func RegisterBackendServiceServer(s *grpc.Server, srv BackendServiceServer) {
	s.RegisterService(&_BackendService_serviceDesc, srv)
}

func _BackendService_GetPeerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServiceServer).GetPeerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.BackendService/GetPeerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServiceServer).GetPeerInfo(ctx, req.(*PeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackendService_IwantoBePrimary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IwantToBePrimaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServiceServer).IwantoBePrimary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.BackendService/IwantoBePrimary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServiceServer).IwantoBePrimary(ctx, req.(*IwantToBePrimaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BackendService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.BackendService",
	HandlerType: (*BackendServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getPeerInfo",
			Handler:    _BackendService_GetPeerInfo_Handler,
		},
		{
			MethodName: "IwantoBePrimary",
			Handler:    _BackendService_IwantoBePrimary_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend.proto",
}

func init() { proto.RegisterFile("backend.proto", fileDescriptor_backend_d3c311b66966ebc3) }

var fileDescriptor_backend_d3c311b66966ebc3 = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0xbd, 0x4e, 0xc3, 0x30,
	0x14, 0x85, 0x71, 0x81, 0x12, 0x6e, 0xc4, 0x9f, 0x87, 0x62, 0x45, 0xa2, 0x8a, 0x3c, 0x85, 0x25,
	0x03, 0x30, 0x31, 0x76, 0xcb, 0x56, 0xb9, 0xbc, 0x80, 0xeb, 0x5c, 0x22, 0x8b, 0xd6, 0x0e, 0xb6,
	0x0b, 0x82, 0xa7, 0xe1, 0x51, 0x51, 0x93, 0x86, 0x46, 0x42, 0x59, 0x3a, 0x9e, 0xe3, 0xeb, 0xe3,
	0x73, 0x3f, 0xc3, 0xc5, 0x52, 0xaa, 0x37, 0x34, 0x65, 0x5e, 0x3b, 0x1b, 0x2c, 0x3d, 0xa9, 0x5c,
	0xad, 0xf8, 0x3d, 0xc4, 0x73, 0x44, 0x27, 0xf0, 0x7d, 0x83, 0x3e, 0xd0, 0x04, 0xa2, 0xca, 0x21,
	0x06, 0x6d, 0x2a, 0x46, 0x52, 0x92, 0x9d, 0x8b, 0x3f, 0xcd, 0x57, 0x70, 0xbd, 0x1d, 0x2d, 0xcc,
	0xab, 0x15, 0xe8, 0x6b, 0x6b, 0x3c, 0xd2, 0x14, 0x62, 0x8f, 0x4e, 0xae, 0xf4, 0x37, 0x96, 0x45,
	0xd9, 0x5c, 0x39, 0x15, 0x7d, 0x8b, 0x4e, 0x60, 0xac, 0x1c, 0x96, 0x3a, 0xb0, 0x51, 0x4a, 0xb2,
	0x91, 0xd8, 0x29, 0x3a, 0x05, 0x90, 0xeb, 0xa2, 0x76, 0x7a, 0x2d, 0xdd, 0x17, 0x3b, 0x4e, 0x49,
	0x16, 0x89, 0x9e, 0xc3, 0x17, 0x70, 0x5b, 0x7c, 0x4a, 0x13, 0x5e, 0xec, 0x0c, 0xe7, 0xad, 0xd7,
	0x95, 0x3c, 0xf8, 0x51, 0xfe, 0x04, 0xec, 0x7f, 0xe8, 0x6e, 0x15, 0x06, 0x67, 0x7e, 0xa3, 0x14,
	0x7a, 0xdf, 0x24, 0x46, 0xa2, 0x93, 0x0f, 0x3f, 0x04, 0x2e, 0x67, 0x2d, 0xbb, 0x05, 0xba, 0x0f,
	0xad, 0x90, 0x3e, 0x43, 0x5c, 0x61, 0xe8, 0x70, 0xd0, 0x9b, 0x7c, 0x0b, 0x33, 0xef, 0x91, 0x4c,
	0x26, 0x7b, 0xab, 0x4f, 0x8c, 0x1f, 0x51, 0x01, 0x57, 0x4d, 0x89, 0x7d, 0x07, 0x7a, 0xd7, 0x0e,
	0x0f, 0x2c, 0x9c, 0x4c, 0x87, 0x8e, 0xbb, 0xcc, 0xe5, 0xb8, 0xf9, 0xd3, 0xc7, 0xdf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x7a, 0xfc, 0xb9, 0xaf, 0xe4, 0x01, 0x00, 0x00,
}
